"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7682],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8746:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return m}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_position:4},s="Control Flow",p={unversionedId:"Control-Flow",id:"Control-Flow",title:"Control Flow",description:"Block statements are used to group several statements into a single block. The block is delimited by a pair of curly brackets {}. Block statements are commonly used with control flow statements such as if, for or while.",source:"@site/Hedgehog-Script/Control-Flow.mdx",sourceDirName:".",slug:"/Control-Flow",permalink:"/Hedgehog-Script/Control-Flow",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Arrays",permalink:"/Hedgehog-Script/Array"},next:{title:"Strings",permalink:"/Hedgehog-Script/Strings"}},c={},m=[{value:"if-else statement",id:"if-else-statement",level:2},{value:"For statement",id:"for-statement",level:2},{value:"while and do-while statement",id:"while-and-do-while-statement",level:2}],u={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"control-flow"},"Control Flow"),(0,a.kt)("p",null,"Block statements are used to group several statements into a single block. The block is delimited by a pair of curly brackets ",(0,a.kt)("inlineCode",{parentName:"p"},"{}"),". Block statements are commonly used with control flow statements such as if, for or while."),(0,a.kt)("h2",{id:"if-else-statement"},"if-else statement"),(0,a.kt)("p",null,"Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"if")," statement to execute a statement if a logical condition is ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),". Use the optional ",(0,a.kt)("inlineCode",{parentName:"p"},"else")," clause to execute a statement if the condition is ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),". Lastly, you can have a ",(0,a.kt)("inlineCode",{parentName:"p"},"if-else if")," statement which is a block statement that when the ",(0,a.kt)("inlineCode",{parentName:"p"},"if")," condition fails, it checks if the next ",(0,a.kt)("inlineCode",{parentName:"p"},"if")," conditions is true or not, and then the next one... and so on.."),(0,a.kt)("p",null,"Here is an example:"),(0,a.kt)("iframe",{src:"https://hlab.app/s/docs/control1_hbook",width:"100%",height:"300px"}),(0,a.kt)("h2",{id:"for-statement"},"For statement"),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"for")," loop repeats until a specified condition evaluates to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),". The Hedgehog Script ",(0,a.kt)("inlineCode",{parentName:"p"},"for")," loop is the same as JavaScript, which is similar to the Java and C ",(0,a.kt)("inlineCode",{parentName:"p"},"for")," loop. A ",(0,a.kt)("inlineCode",{parentName:"p"},"for")," statement looks as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"for ([initialExpression]; [condition]; [incrementExpression]) { \n  statement }\n")),(0,a.kt)("p",null,"Here is an example:"),(0,a.kt)("iframe",{src:"https://hlab.app/s/docs/control2_hbook",width:"100%",height:"300px"}),(0,a.kt)("h2",{id:"while-and-do-while-statement"},"while and do-while statement"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"while")," statement creates a loop that executes a specified statement as long as the test condition evaluates to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),". The condition is evaluated ",(0,a.kt)("em",{parentName:"p"},"before")," executing the statement."),(0,a.kt)("p",null,"Here is the syntax for ",(0,a.kt)("inlineCode",{parentName:"p"},"while")," statement:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"while (condition) {\n  statement }\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"do...while")," statement creates a loop that executes a specified statement until the test condition evaluates to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),". The condition is evaluated ",(0,a.kt)("em",{parentName:"p"},"after")," executing the statement, resulting in the specified statement executing ",(0,a.kt)("em",{parentName:"p"},"at least once"),"."),(0,a.kt)("p",null,"Here is the syntax for ",(0,a.kt)("inlineCode",{parentName:"p"},"do...while")," statement:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"do {\n   statement }\nwhile (condition);\n")),(0,a.kt)("p",null,"Here are examples for ",(0,a.kt)("inlineCode",{parentName:"p"},"while")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"do...while")," statements in Hedgehog Lab:"),(0,a.kt)("iframe",{src:"https://hlab.app/s/docs/control3_hbook",width:"100%",height:"=500px"}),(0,a.kt)("p",null,"These are the basic ways to control the logical flow of your script/program in Hedgehog Lab."))}d.isMDXComponent=!0}}]);